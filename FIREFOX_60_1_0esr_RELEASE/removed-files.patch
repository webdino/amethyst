diff --git a/browser/base/content/nsContextMenu.js b/browser/base/content/nsContextMenu.js
--- a/browser/base/content/nsContextMenu.js
+++ b/browser/base/content/nsContextMenu.js
@@ -1524,7 +1524,6 @@ nsContextMenu.prototype = {
           this._telemetryHadCustomItems ? "withcustom" : "withoutcustom"
       ];
       let target = this._telemetryClickID || "close-without-interaction";
-      BrowserUITelemetry.registerContextMenuInteraction(eventKey, target);
     };
     let activationHandler = (e) => {
       // Deal with command events being routed to command elements; figure out
diff --git a/browser/base/content/urlbarBindings.xml b/browser/base/content/urlbarBindings.xml
--- a/browser/base/content/urlbarBindings.xml
+++ b/browser/base/content/urlbarBindings.xml
@@ -672,9 +672,6 @@ file, You can obtain one at http://mozil
             return;
           }
 
-          BrowserUsageTelemetry.recordUrlbarSelectedResultMethod(
-            event, this.userSelectionBehavior);
-
           // Determine whether to use the selected one-off search button.  In
           // one-off search buttons parlance, "selected" means that the button
           // has been navigated to via the keyboard.  So we want to use it if
diff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js
--- a/browser/components/nsBrowserContentHandler.js
+++ b/browser/components/nsBrowserContentHandler.js
@@ -18,8 +18,6 @@ ChromeUtils.defineModuleGetter(this, "Sh
                                "resource:///modules/ShellService.jsm");
 XPCOMUtils.defineLazyServiceGetter(this, "WindowsUIUtils",
                                    "@mozilla.org/windows-ui-utils;1", "nsIWindowsUIUtils");
-ChromeUtils.defineModuleGetter(this, "UpdatePing",
-                               "resource://gre/modules/UpdatePing.jsm");
 
 const nsISupports            = Ci.nsISupports;
 
@@ -541,18 +539,10 @@ nsBrowserContentHandler.prototype = {
             overridePage = Services.urlFormatter.formatURLPref("startup.homepage_override_url");
             if (prefb.prefHasUserValue("app.update.postupdate")) {
               overridePage = getPostUpdateOverridePage(overridePage);
-              // Send the update ping to signal that the update was successful.
-              UpdatePing.handleUpdateSuccess(old_mstone, old_buildId);
             }
 
             overridePage = overridePage.replace("%OLD_VERSION%", old_mstone);
             break;
-          case OVERRIDE_NEW_BUILD_ID:
-            if (prefb.prefHasUserValue("app.update.postupdate")) {
-              // Send the update ping to signal that the update was successful.
-              UpdatePing.handleUpdateSuccess(old_mstone, old_buildId);
-            }
-            break;
         }
       }
     } catch (ex) {}
diff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js
--- a/browser/components/nsBrowserGlue.js
+++ b/browser/components/nsBrowserGlue.js
@@ -88,9 +88,6 @@ XPCOMUtils.defineLazyModuleGetters(this,
   AutoCompletePopup: "resource://gre/modules/AutoCompletePopup.jsm",
   BookmarkHTMLUtils: "resource://gre/modules/BookmarkHTMLUtils.jsm",
   BookmarkJSONUtils: "resource://gre/modules/BookmarkJSONUtils.jsm",
-  BrowserErrorReporter: "resource:///modules/BrowserErrorReporter.jsm",
-  BrowserUITelemetry: "resource:///modules/BrowserUITelemetry.jsm",
-  BrowserUsageTelemetry: "resource:///modules/BrowserUsageTelemetry.jsm",
   ContentClick: "resource:///modules/ContentClick.jsm",
   ContextualIdentityService: "resource://gre/modules/ContextualIdentityService.jsm",
   CustomizableUI: "resource:///modules/CustomizableUI.jsm",
@@ -101,7 +98,6 @@ XPCOMUtils.defineLazyModuleGetters(this,
   FileSource: "resource://gre/modules/L10nRegistry.jsm",
   FormValidationHandler: "resource:///modules/FormValidationHandler.jsm",
   FxAccounts: "resource://gre/modules/FxAccounts.jsm",
-  HybridContentTelemetry: "resource://gre/modules/HybridContentTelemetry.jsm",
   Integration: "resource://gre/modules/Integration.jsm",
   L10nRegistry: "resource://gre/modules/L10nRegistry.jsm",
   LanguagePrompt: "resource://gre/modules/LanguagePrompt.jsm",
@@ -110,14 +106,12 @@ XPCOMUtils.defineLazyModuleGetters(this,
   LoginManagerParent: "resource://gre/modules/LoginManagerParent.jsm",
   NetUtil: "resource://gre/modules/NetUtil.jsm",
   NewTabUtils: "resource://gre/modules/NewTabUtils.jsm",
-  Normandy: "resource://normandy/Normandy.jsm",
   ObjectUtils: "resource://gre/modules/ObjectUtils.jsm",
   OS: "resource://gre/modules/osfile.jsm",
   PageActions: "resource:///modules/PageActions.jsm",
   PageThumbs: "resource://gre/modules/PageThumbs.jsm",
   PdfJs: "resource://pdf.js/PdfJs.jsm",
   PermissionUI: "resource:///modules/PermissionUI.jsm",
-  PingCentre: "resource:///modules/PingCentre.jsm",
   PlacesBackups: "resource://gre/modules/PlacesBackups.jsm",
   PlacesUtils: "resource://gre/modules/PlacesUtils.jsm",
   PluralForm: "resource://gre/modules/PluralForm.jsm",
@@ -348,37 +342,6 @@ BrowserGlue.prototype = {
     Weave.Service.scheduler.delayedAutoConnect(delay);
   },
 
-  /**
-   * Lazily initialize PingCentre
-   */
-  get pingCentre() {
-    const MAIN_TOPIC_ID = "main";
-    Object.defineProperty(this, "pingCentre", {
-      value: new PingCentre({ topic: MAIN_TOPIC_ID })
-    });
-    return this.pingCentre;
-  },
-
-  /**
-   * Lazily initialize BrowserErrorReporter
-   */
-  get browserErrorReporter() {
-    Object.defineProperty(this, "browserErrorReporter", {
-      value: new BrowserErrorReporter(),
-    });
-    return this.browserErrorReporter;
-  },
-
-  _sendMainPingCentrePing() {
-    const ACTIVITY_STREAM_ID = "activity-stream";
-    const payload = {
-      event: "AS_ENABLED",
-      value: true
-    };
-    const options = {filter: ACTIVITY_STREAM_ID};
-    this.pingCentre.sendPing(payload, options);
-  },
-
   // nsIObserver implementation
   observe: function BG_observe(subject, topic, data) {
     switch (topic) {
@@ -573,10 +536,6 @@ BrowserGlue.prototype = {
         // shim for privileged api access.
         PdfJs.init(true);
         break;
-      case "shield-init-complete":
-        this._shieldInitComplete = true;
-        this._sendMainPingCentrePing();
-        break;
     }
   },
 
@@ -613,7 +572,6 @@ BrowserGlue.prototype = {
     os.addObserver(this, "xpi-signature-changed");
     os.addObserver(this, "sync-ui-state:update");
     os.addObserver(this, "handlersvc-store-initialized");
-    os.addObserver(this, "shield-init-complete");
 
     this._flashHangCount = 0;
     this._firstWindowReady = new Promise(resolve => this._firstWindowLoaded = resolve);
@@ -666,7 +624,6 @@ BrowserGlue.prototype = {
     os.removeObserver(this, "flash-plugin-hang");
     os.removeObserver(this, "xpi-signature-changed");
     os.removeObserver(this, "sync-ui-state:update");
-    os.removeObserver(this, "shield-init-complete");
   },
 
   _onAppDefaults: function BG__onAppDefaults() {
@@ -716,8 +673,6 @@ BrowserGlue.prototype = {
       author: vendorShortName,
     });
 
-    Normandy.init();
-
     // Initialize the default l10n resource sources for L10nRegistry.
     let locales = Services.locale.getPackagedLocales();
     const appSource = new FileSource("app", locales, "resource://app/localization/{locale}/");
@@ -1048,23 +1003,10 @@ BrowserGlue.prototype = {
       }
     }
 
-    BrowserUsageTelemetry.uninit();
-    // Only uninit PingCentre if the getter has initialized it
-    if (Object.prototype.hasOwnProperty.call(this, "pingCentre")) {
-      this.pingCentre.uninit();
-    }
-
     PageThumbs.uninit();
     NewTabUtils.uninit();
     AutoCompletePopup.uninit();
     DateTimePickerHelper.uninit();
-
-    // Browser errors are only collected on Nightly
-    if (AppConstants.NIGHTLY_BUILD && AppConstants.MOZ_DATA_REPORTING) {
-      this.browserErrorReporter.uninit();
-    }
-
-    Normandy.uninit();
   },
 
   // All initial windows have opened.
@@ -1074,14 +1016,6 @@ BrowserGlue.prototype = {
     }
     this._windowsWereRestored = true;
 
-    // Browser errors are only collected on Nightly
-    if (AppConstants.NIGHTLY_BUILD && AppConstants.MOZ_DATA_REPORTING) {
-      this.browserErrorReporter.init();
-    }
-
-    BrowserUsageTelemetry.init();
-    BrowserUITelemetry.init();
-
     // Show update notification, if needed.
     if (Services.prefs.prefHasUserValue("app.update.postupdate"))
       this._showUpdateNotification();
@@ -2466,19 +2400,6 @@ BrowserGlue.prototype = {
     // Firefox 60, the hardcoded default was to show history/bookmarks first.
     // After 60, it's to show search suggestions first.
 
-    // Wait for Shield init to complete.
-    await new Promise(resolve => {
-      if (this._shieldInitComplete) {
-        resolve();
-        return;
-      }
-      let topic = "shield-init-complete";
-      Services.obs.addObserver(function obs() {
-        Services.obs.removeObserver(obs, topic);
-        resolve();
-      }, topic);
-    });
-
     // Now get the pref's value.  If the study is active, the value will have
     // just been set (on the default branch) as part of Shield's init.  The pref
     // should not exist otherwise (normally).
@@ -3283,10 +3204,3 @@ var globalMM = Cc["@mozilla.org/globalme
 globalMM.addMessageListener("UITour:onPageEvent", function(aMessage) {
   UITour.onPageEvent(aMessage, aMessage.data);
 });
-
-// Listen for HybridContentTelemetry messages.
-// Do it here instead of HybridContentTelemetry.init() so that
-// the module can be lazily loaded on the first message.
-globalMM.addMessageListener("HybridContentTelemetry:onTelemetryMessage", aMessage => {
-  HybridContentTelemetry.onTelemetryMessage(aMessage, aMessage.data);
-});
diff --git a/browser/components/search/content/search.xml b/browser/components/search/content/search.xml
--- a/browser/components/search/content/search.xml
+++ b/browser/components/search/content/search.xml
@@ -390,11 +390,6 @@
           let selection = this.telemetrySearchDetails;
           let oneOffRecorded = false;
 
-          BrowserUsageTelemetry.recordSearchbarSelectedResultMethod(
-            aEvent,
-            selection ? selection.index : -1
-          );
-
           if (!selection || (selection.index == -1)) {
             oneOffRecorded = this.textbox.popup.oneOffButtons
                                  .maybeRecordTelemetry(aEvent, aWhere, aParams);
@@ -418,8 +413,6 @@
               if (!aEngine) {
                 aEngine = this.currentEngine;
               }
-              BrowserSearch.recordOneoffSearchInTelemetry(aEngine, source, type,
-                                                          aWhere);
             }
           }
 
@@ -464,7 +457,6 @@
             isSuggestion: (!aOneOff && telemetrySearchDetails),
             selection: telemetrySearchDetails
           };
-          BrowserSearch.recordSearchInTelemetry(engine, "searchbar", details);
           // null parameter below specifies HTML response for search
           let params = {
             postData: submission.postData,
@@ -977,11 +969,6 @@
 
           // Check for middle-click or modified clicks on the search bar
           if (popupForSearchBar) {
-            BrowserUsageTelemetry.recordSearchbarSelectedResultMethod(
-              aEvent,
-              this.selectedIndex
-            );
-
             // Handle search bar popup clicks
             var search = this.input.controller.getValueAt(this.selectedIndex);
 
@@ -2208,8 +2195,6 @@
                               aOpenUILinkParams &&
                               aOpenUILinkParams.inBackground;
           let where = tabBackground ? "tab-background" : aOpenUILinkWhere;
-          BrowserSearch.recordOneoffSearchInTelemetry(engine, source, type,
-                                                      where);
           return true;
         ]]></body>
       </method>
diff --git a/browser/extensions/moz.build b/browser/extensions/moz.build
--- a/browser/extensions/moz.build
+++ b/browser/extensions/moz.build
@@ -5,15 +5,8 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 DIRS += [
-    'activity-stream',
-    'aushelper',
-    'followonsearch',
     'formautofill',
-    'onboarding',
     'pdfjs',
-    'pocket',
-    'screenshots',
-    'webcompat',
 ]
 
 # Only include the following system add-ons if building Aurora or Nightly
diff --git a/browser/installer/package-manifest.in b/browser/installer/package-manifest.in
--- a/browser/installer/package-manifest.in
+++ b/browser/installer/package-manifest.in
@@ -290,7 +290,6 @@
 @RESPATH@/components/saxparser.xpt
 @RESPATH@/browser/components/sessionstore.xpt
 @RESPATH@/components/services-crypto-component.xpt
-@RESPATH@/components/captivedetect.xpt
 @RESPATH@/browser/components/shellservice.xpt
 @RESPATH@/components/shistory.xpt
 @RESPATH@/components/spellchecker.xpt
@@ -486,12 +485,8 @@
 @RESPATH@/components/Weave.js
 @RESPATH@/components/FxAccountsComponents.manifest
 @RESPATH@/components/FxAccountsPush.js
-@RESPATH@/components/CaptivePortalDetectComponents.manifest
-@RESPATH@/components/captivedetect.js
 @RESPATH@/components/servicesComponents.manifest
 @RESPATH@/components/cryptoComponents.manifest
-@RESPATH@/components/TelemetryStartup.js
-@RESPATH@/components/TelemetryStartup.manifest
 @RESPATH@/components/XULStore.js
 @RESPATH@/components/XULStore.manifest
 @RESPATH@/components/recording-cmdline.js
@@ -782,14 +777,8 @@ bin/libfreebl_32int64_3.so
 
 ; [ Ping Sender ]
 ;
-@BINPATH@/pingsender@BIN_SUFFIX@
-
 @RESPATH@/components/dom_audiochannel.xpt
 
-; Shutdown Terminator
-@RESPATH@/components/nsTerminatorTelemetry.js
-@RESPATH@/components/terminator.manifest
-
 #ifdef LLVM_SYMBOLIZER
 @BINPATH@/@LLVM_SYMBOLIZER@
 #endif
@@ -824,13 +813,6 @@ bin/libfreebl_32int64_3.so
 ; Background Hang Monitor
 @RESPATH@/components/backgroundhangmonitor.xpt
 
-; NOTE: This must match the config checks in
-; /toolkit/components/backgroundhangmonitor/moz.build.
-#if defined(NIGHTLY_BUILD) && !defined(MOZ_DEBUG) && !defined(MOZ_TSAN)
-@RESPATH@/components/BHRTelemetryService.js
-@RESPATH@/components/BHRTelemetryService.manifest
-#endif
-
 #ifdef PKG_LOCALE_MANIFEST
 #include @PKG_LOCALE_MANIFEST@
 #endif
diff --git a/browser/locales/Makefile.in b/browser/locales/Makefile.in
--- a/browser/locales/Makefile.in
+++ b/browser/locales/Makefile.in
@@ -77,8 +77,6 @@ libs-%:
 ifneq (,$(wildcard ../extensions/formautofill/locales))
 	@$(MAKE) -C ../extensions/formautofill/locales AB_CD=$* XPI_NAME=locale-$*
 endif
-	@$(MAKE) -C ../extensions/onboarding/locales AB_CD=$* XPI_NAME=locale-$*
-	@$(MAKE) -C ../extensions/pocket/locale AB_CD=$* XPI_NAME=locale-$*
 ifndef RELEASE_OR_BETA
 	@$(MAKE) -C ../extensions/presentation/locale AB_CD=$* XPI_NAME=locale-$*
 endif
diff --git a/browser/modules/moz.build b/browser/modules/moz.build
--- a/browser/modules/moz.build
+++ b/browser/modules/moz.build
@@ -127,9 +127,6 @@ EXTRA_JS_MODULES += [
     'AboutNewTab.jsm',
     'AsyncTabSwitcher.jsm',
     'AttributionCode.jsm',
-    'BrowserErrorReporter.jsm',
-    'BrowserUITelemetry.jsm',
-    'BrowserUsageTelemetry.jsm',
     'ContentClick.jsm',
     'ContentCrashHandlers.jsm',
     'ContentLinkHandler.jsm',
@@ -147,7 +144,6 @@ EXTRA_JS_MODULES += [
     'OpenInTabsUtils.jsm',
     'PageActions.jsm',
     'PermissionUI.jsm',
-    'PingCentre.jsm',
     'PluginContent.jsm',
     'ProcessHangMonitor.jsm',
     'ReaderParent.jsm',
diff --git a/docshell/base/nsAboutRedirector.cpp b/docshell/base/nsAboutRedirector.cpp
--- a/docshell/base/nsAboutRedirector.cpp
+++ b/docshell/base/nsAboutRedirector.cpp
@@ -122,10 +122,6 @@ static const RedirEntry kRedirMap[] = {
     nsIAboutModule::ALLOW_SCRIPT
   },
   {
-    "telemetry", "chrome://global/content/aboutTelemetry.xhtml",
-    nsIAboutModule::ALLOW_SCRIPT
-  },
-  {
     "url-classifier", "chrome://global/content/aboutUrlClassifier.xhtml",
     nsIAboutModule::ALLOW_SCRIPT
   },
diff --git a/netwerk/base/CaptivePortalService.cpp b/netwerk/base/CaptivePortalService.cpp
--- a/netwerk/base/CaptivePortalService.cpp
+++ b/netwerk/base/CaptivePortalService.cpp
@@ -26,7 +26,7 @@ static LazyLogModule gCaptivePortalLog("
 
 NS_IMPL_ISUPPORTS(CaptivePortalService, nsICaptivePortalService, nsIObserver,
                   nsISupportsWeakReference, nsITimerCallback,
-                  nsICaptivePortalCallback, nsINamed)
+                  nsINamed)
 
 CaptivePortalService::CaptivePortalService()
   : mState(UNKNOWN)
@@ -59,20 +59,7 @@ CaptivePortalService::PerformCheck()
     return NS_OK;
   }
   MOZ_ASSERT(XRE_GetProcessType() == GeckoProcessType_Default);
-  nsresult rv;
-  if (!mCaptivePortalDetector) {
-    mCaptivePortalDetector =
-      do_GetService("@mozilla.org/toolkit/captive-detector;1", &rv);
-    if (NS_FAILED(rv)) {
-        LOG(("Unable to get a captive portal detector\n"));
-        return rv;
-    }
-  }
-
-  LOG(("CaptivePortalService::PerformCheck - Calling CheckCaptivePortal\n"));
-  mRequestInProgress = true;
-  mCaptivePortalDetector->CheckCaptivePortal(kInterfaceName, this);
-  return NS_OK;
+  return NS_ERROR_FACTORY_NOT_REGISTERED;
 }
 
 nsresult
@@ -187,10 +174,6 @@ CaptivePortalService::Stop()
   mTimer = nullptr;
   mRequestInProgress = false;
   mStarted = false;
-  if (mCaptivePortalDetector) {
-    mCaptivePortalDetector->Abort(kInterfaceName);
-  }
-  mCaptivePortalDetector = nullptr;
 
   // Clear the state in case anyone queries the state while detection is off.
   mState = UNKNOWN;
@@ -346,45 +329,5 @@ CaptivePortalService::NotifyConnectivity
   }
 }
 
-//-----------------------------------------------------------------------------
-// CaptivePortalService::nsICaptivePortalCallback
-//-----------------------------------------------------------------------------
-NS_IMETHODIMP
-CaptivePortalService::Prepare()
-{
-  LOG(("CaptivePortalService::Prepare\n"));
-  MOZ_ASSERT(XRE_GetProcessType() == GeckoProcessType_Default);
-  // XXX: Finish preparation shouldn't be called until dns and routing is available.
-  if (mCaptivePortalDetector) {
-    mCaptivePortalDetector->FinishPreparation(kInterfaceName);
-  }
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-CaptivePortalService::Complete(bool success)
-{
-  LOG(("CaptivePortalService::Complete(success=%d) mState=%d\n", success, mState));
-  MOZ_ASSERT(XRE_GetProcessType() == GeckoProcessType_Default);
-  mLastChecked = TimeStamp::Now();
-
-  // Note: this callback gets called when:
-  // 1. the request is completed, and content is valid (success == true)
-  // 2. when the request is aborted or times out (success == false)
-
-  if (success) {
-    if (mEverBeenCaptive) {
-      mState = UNLOCKED_PORTAL;
-      NotifyConnectivityAvailable(true);
-    } else {
-      mState = NOT_CAPTIVE;
-      NotifyConnectivityAvailable(false);
-    }
-  }
-
-  mRequestInProgress = false;
-  return NS_OK;
-}
-
 } // namespace net
 } // namespace mozilla
diff --git a/netwerk/base/CaptivePortalService.h b/netwerk/base/CaptivePortalService.h
--- a/netwerk/base/CaptivePortalService.h
+++ b/netwerk/base/CaptivePortalService.h
@@ -6,7 +6,6 @@
 #define CaptivePortalService_h_
 
 #include "nsICaptivePortalService.h"
-#include "nsICaptivePortalDetector.h"
 #include "nsINamed.h"
 #include "nsIObserver.h"
 #include "nsWeakReference.h"
@@ -22,7 +21,6 @@ class CaptivePortalService
   , public nsIObserver
   , public nsSupportsWeakReference
   , public nsITimerCallback
-  , public nsICaptivePortalCallback
   , public nsINamed
 {
 public:
@@ -30,7 +28,6 @@ public:
   NS_DECL_NSICAPTIVEPORTALSERVICE
   NS_DECL_NSIOBSERVER
   NS_DECL_NSITIMERCALLBACK
-  NS_DECL_NSICAPTIVEPORTALCALLBACK
   NS_DECL_NSINAMED
 
   CaptivePortalService();
@@ -47,7 +44,6 @@ private:
   nsresult RearmTimer();
   void NotifyConnectivityAvailable(bool aCaptive);
 
-  nsCOMPtr<nsICaptivePortalDetector>    mCaptivePortalDetector;
   int32_t                               mState;
 
   nsCOMPtr<nsITimer>                    mTimer;
diff --git a/toolkit/components/backgroundhangmonitor/moz.build b/toolkit/components/backgroundhangmonitor/moz.build
--- a/toolkit/components/backgroundhangmonitor/moz.build
+++ b/toolkit/components/backgroundhangmonitor/moz.build
@@ -16,11 +16,6 @@ if CONFIG['NIGHTLY_BUILD'] and \
    not CONFIG['MOZ_TSAN']:
     DEFINES['MOZ_ENABLE_BACKGROUND_HANG_MONITOR'] = 1
 
-    EXTRA_COMPONENTS += [
-        'BHRTelemetryService.js',
-        'BHRTelemetryService.manifest',
-    ]
-
     XPCSHELL_TESTS_MANIFESTS += ['tests/xpcshell.ini']
 
 XPIDL_SOURCES += [
diff --git a/toolkit/components/moz.build b/toolkit/components/moz.build
--- a/toolkit/components/moz.build
+++ b/toolkit/components/moz.build
@@ -93,8 +93,6 @@ if CONFIG['MOZ_XUL']:
 if CONFIG['MOZ_TOOLKIT_SEARCH']:
     DIRS += ['search']
 
-DIRS += ['captivedetect']
-
 if CONFIG['OS_TARGET'] != 'Android':
     DIRS += ['terminator']
 
@@ -111,6 +109,3 @@ if CONFIG['MOZ_WIDGET_TOOLKIT'] != 'andr
 
 if CONFIG['NIGHTLY_BUILD'] and CONFIG['MOZ_BUILD_APP'] == 'browser':
     DIRS += ['payments']
-
-if CONFIG['MOZ_BUILD_APP'] == 'browser':
-    DIRS += ['normandy']
diff --git a/toolkit/components/telemetry/moz.build b/toolkit/components/telemetry/moz.build
--- a/toolkit/components/telemetry/moz.build
+++ b/toolkit/components/telemetry/moz.build
@@ -10,11 +10,6 @@ include('/ipc/chromium/chromium-config.m
 
 FINAL_LIBRARY = 'xul'
 
-DIRS = [
-    'hybrid-content',
-    'pingsender',
-]
-
 DEFINES['MOZ_APP_VERSION'] = '"%s"' % CONFIG['MOZ_APP_VERSION']
 
 LOCAL_INCLUDES += [
@@ -77,11 +72,6 @@ if CONFIG['MOZ_GECKO_PROFILER']:
       'KeyedStackCapturer.cpp'
     ]
 
-EXTRA_COMPONENTS += [
-    'TelemetryStartup.js',
-    'TelemetryStartup.manifest'
-]
-
 EXTRA_JS_MODULES += [
     'GCTelemetry.jsm',
     'TelemetryArchive.jsm',
@@ -98,7 +88,6 @@ EXTRA_JS_MODULES += [
     'TelemetryTimestamps.jsm',
     'TelemetryUtils.jsm',
     'UITelemetry.jsm',
-    'UpdatePing.jsm',
 ]
 
 TESTING_JS_MODULES += [
diff --git a/toolkit/components/terminator/moz.build b/toolkit/components/terminator/moz.build
--- a/toolkit/components/terminator/moz.build
+++ b/toolkit/components/terminator/moz.build
@@ -17,9 +17,4 @@ EXPORTS += [
     'nsTerminator.h',
 ]
 
-EXTRA_COMPONENTS += [
-    'nsTerminatorTelemetry.js',
-    'terminator.manifest',
-]
-
 FINAL_LIBRARY = 'xul'
diff --git a/toolkit/content/browser-child.js b/toolkit/content/browser-child.js
--- a/toolkit/content/browser-child.js
+++ b/toolkit/content/browser-child.js
@@ -356,7 +356,7 @@ var WebNavigation =  {
     if (triggeringPrincipal)
       triggeringPrincipal = Utils.deserializePrincipal(triggeringPrincipal);
     this._wrapURIChangeCall(() => {
-      return this.webNavigation.loadURIWithOptions(uri, flags, referrer, referrerPolicy,
+      this.webNavigation.loadURIWithOptions(uri, flags, referrer, referrerPolicy,
                                                    postData, headers, baseURI, triggeringPrincipal);
     });
   },
diff --git a/toolkit/content/jar.mn b/toolkit/content/jar.mn
--- a/toolkit/content/jar.mn
+++ b/toolkit/content/jar.mn
@@ -28,9 +28,6 @@ toolkit.jar:
    content/global/aboutwebrtc/aboutWebrtc.html (aboutwebrtc/aboutWebrtc.html)
    content/global/aboutSupport.js
 *  content/global/aboutSupport.xhtml
-   content/global/aboutTelemetry.js
-   content/global/aboutTelemetry.xhtml
-   content/global/aboutTelemetry.css
    content/global/aboutUrlClassifier.js
    content/global/aboutUrlClassifier.xhtml
    content/global/aboutUrlClassifier.css
diff --git a/toolkit/content/moz.build b/toolkit/content/moz.build
--- a/toolkit/content/moz.build
+++ b/toolkit/content/moz.build
@@ -34,9 +34,6 @@ DEFINES['TOPOBJDIR'] = TOPOBJDIR
 with Files('**'):
     BUG_COMPONENT = ('Toolkit', 'General')
 
-with Files('aboutTelemetry.*'):
-    BUG_COMPONENT = ('Toolkit', 'Telemetry')
-
 with Files('aboutwebrtc/*'):
     BUG_COMPONENT = ('Core', 'WebRTC')
 
@@ -231,9 +228,6 @@ with Files('aboutService*'):
 with Files('aboutSupport*'):
     BUG_COMPONENT = ('Toolkit', 'General')
 
-with Files('aboutTelemetry*'):
-    BUG_COMPONENT = ('Toolkit', 'Telemetry')
-
 with Files('autocomplete.css'):
     BUG_COMPONENT = ('Firefox', 'Search')
 
diff --git a/toolkit/mozapps/extensions/extensions.manifest b/toolkit/mozapps/extensions/extensions.manifest
--- a/toolkit/mozapps/extensions/extensions.manifest
+++ b/toolkit/mozapps/extensions/extensions.manifest
@@ -4,12 +4,8 @@ contract @mozilla.org/extensions/blockli
 category profile-after-change nsBlocklistService @mozilla.org/extensions/blocklist;1 process=main
 #endif
 
-category update-timer nsBlocklistService @mozilla.org/extensions/blocklist;1,getService,blocklist-background-update-timer,extensions.blocklist.interval,86400
 component {4399533d-08d1-458c-a87a-235f74451cfa} addonManager.js
 contract @mozilla.org/addons/integration;1 {4399533d-08d1-458c-a87a-235f74451cfa}
-#ifndef MOZ_WIDGET_ANDROID
-category update-timer addonManager @mozilla.org/addons/integration;1,getService,addon-background-update-timer,extensions.update.interval,86400
-#endif
 component {7beb3ba8-6ec3-41b4-b67c-da89b8518922} amContentHandler.js
 contract @mozilla.org/uriloader/content-handler;1?type=application/x-xpinstall {7beb3ba8-6ec3-41b4-b67c-da89b8518922}
 component {9df8ef2b-94da-45c9-ab9f-132eb55fddf1} amInstallTrigger.js
