diff --git a/browser/amethyst/content/browser.css b/browser/amethyst/content/browser.css
new file mode 100644
--- /dev/null
+++ b/browser/amethyst/content/browser.css
@@ -0,0 +1,11 @@
+/* browser/base/content/browser.css:981 */
+#invalid-form-popup > description {
+  max-width: 280px;
+}
+
+.popup-anchor {
+  /* should occupy space but not be visible */
+  opacity: 0;
+  pointer-events: none;
+  position: absolute;
+}
diff --git a/browser/amethyst/content/browser.js b/browser/amethyst/content/browser.js
new file mode 100644
--- /dev/null
+++ b/browser/amethyst/content/browser.js
@@ -0,0 +1,132 @@
+const { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
+const { Preferences } = ChromeUtils.import(
+  "resource://gre/modules/Preferences.jsm"
+);
+
+const ZOOM_PREF = "devtools.toolbox.zoomValue";
+const MIN_ZOOM = 0.5;
+const MAX_ZOOM = 2;
+
+function onload(){
+  window.fullScreen = true;
+
+  let uriToLoad = "";
+  if (window.arguments && window.arguments.length) {
+    let args = window.arguments[0];
+    if (args instanceof Ci.nsIArray && args.length) {
+      for (let i = 0; i < args.length; i++) {
+        uriToLoad = args.queryElementAt(i, Ci.nsISupportsString).data;
+        if (!invalidStartupHomepage(uriToLoad)) break;
+      }
+    }
+  }
+  if (invalidStartupHomepage(uriToLoad)) {
+    uriToLoad = Cc["@mozilla.org/browser/clh;1"].getService(Ci.nsIBrowserHandler).defaultArgs;
+  }
+  if (invalidStartupHomepage(uriToLoad)) {
+    uriToLoad = Preferences.get("browser.startup.homepage");
+  }
+
+  if(uriToLoad.indexOf('about:') == 0){
+    document.getElementById("content").remove();
+    var element = document.getElementById("aboutContent");
+    element.id = "content";
+  }else{
+    document.getElementById("aboutContent").remove();
+  }
+
+  getSelectedBrowser().src = uriToLoad;
+}
+
+function invalidStartupHomepage(uriToLoad){
+  return !uriToLoad || uriToLoad === "about:home" || uriToLoad === "about:newtab";
+}
+
+function getSelectedBrowser(){
+  return document.getElementById("content");
+}
+
+function getPopupAnchor(){
+  return document.getElementById("invalid-form-popup-anchor");
+}
+
+/**
+ * get Environment variable
+ */ 
+function getEnvVar(envVarName){
+  let env = Cc["@mozilla.org/process/environment;1"].getService(
+    Ci.nsIEnvironment
+  );
+  return env.get(envVarName);
+}
+
+/**
+ * Keyboard shortcut
+ */
+function BrowserHomePage(){
+  if(getEnvVar("WEBVIEWER_ENABLE_HOMEPAGE") || Preferences.get("webviewer.homepage.enable")){
+    return  getSelectedBrowser().src = Preferences.get("browser.startup.homepage");
+  }
+}
+
+function BrowserBack(){
+  if(getEnvVar("WEBVIEWER_ENABLE_BACK") || Preferences.get("webviewer.back.enable")){
+    return getSelectedBrowser().goBack();
+  }
+}
+
+function BrowserForward(){
+  if(getEnvVar("WEBVIEWER_ENABLE_FORWARD") || Preferences.get("webviewer.forward.enable")){
+    return getSelectedBrowser().goForward();
+  }
+}
+
+function BrowserReload(){
+  if(getEnvVar("WEBVIEWER_ENABLE_RELOAD") || Preferences.get("ebviewer.reload.enable")){
+    return getSelectedBrowser().reload();
+  }
+}
+
+function BrowserReloadSkipCache(){
+  if(getEnvVar("WEBVIEWER_ENABLE_RELOAD") || Preferences.get("ebviewer.reload.enable")){
+    return getSelectedBrowser().reloadWithFlags("LOAD_FLAGS_BYPASS_CACHE");
+  }
+}
+
+function BrowserZoomIn(){
+  if(getEnvVar("WEBVIEWER_ENABLE_ZOOM") || Preferences.get("webviewer.zoom.enable")){
+    if(MAX_ZOOM > getSelectedBrowser().fullZoom){
+    return getSelectedBrowser().fullZoom += 0.1;
+    }
+  }
+}
+
+function BrowserZoomOut(){
+  if(getEnvVar("WEBVIEWER_ENABLE_ZOOM") || Preferences.get("webviewer.zoom.enable")){
+    if(MIN_ZOOM < getSelectedBrowser().fullZoom){
+    return  getSelectedBrowser().fullZoom -= 0.1;
+    }
+  }
+}
+
+function BrowserZoomReset(){
+  if(getEnvVar("WEBVIEWER_ENABLE_ZOOM") || Preferences.get("webviewer.zoom.enable")){
+    return getSelectedBrowser().fullZoom =  parseFloat(Services.prefs.getCharPref(ZOOM_PREF));
+  }
+}
+
+function BrowserLoadURI(uriToLoad){
+  if(getEnvVar("WEBVIEWER_ENABLE_ABOUT") || Preferences.get("webviewer.about.enable")){
+    return  getSelectedBrowser().src = uriToLoad;
+  }
+}
+
+function BrowserQuit(){
+  if(getEnvVar("WEBVIEWER_ENABLE_QUIT") ||  Preferences.get("webviewer.quit.enable")){
+    window.close();
+  }
+}
+
+function BrowserFullScreen(){
+  window.fullScreen = !window.fullScreen;
+}
diff --git a/browser/amethyst/content/browser.xhtml b/browser/amethyst/content/browser.xhtml
new file mode 100644
--- /dev/null
+++ b/browser/amethyst/content/browser.xhtml
@@ -0,0 +1,70 @@
+<?xml version="1.0"?>
+<!DOCTYPE html [
+<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd" >
+%brandDTD;
+]>
+
+<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
+<?xml-stylesheet href="chrome://browser/content/browser.css" type="text/css"?>
+
+<html id="main-window"
+        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        width="800"
+        height="480"
+        sizemode="maximized"
+        title="&brandFullName;"
+        onload="onload()"
+>
+
+<commandset id="mainCommandSet">
+  <command id="Browser:Home"    oncommand="BrowserHomePage();"/>
+  <command id="Browser:Back"    oncommand="BrowserBack();"/>
+  <command id="Browser:Forward"    oncommand="BrowserForward();"/>
+  <command id="Browser:Reload"    oncommand="BrowserReload();"/>
+  <command id="Browser:ReloadSkipCache"    oncommand="BrowserReloadSkipCache();"/>
+  <command id="Browser:ZoomIn"    oncommand="BrowserZoomIn();"/>
+  <command id="Browser:ZoomOut"    oncommand="BrowserZoomOut();"/>
+  <command id="Browser:ZoomReset"    oncommand="BrowserZoomReset();"/>
+  <command id="Browser:about:pre"    oncommand="BrowserLoadURI('about:preferences');"/>
+  <command id="Browser:about:about"    oncommand="BrowserLoadURI('about:about');"/>
+  <command id="Browser:about:config"    oncommand="BrowserLoadURI('about:config');"/>
+  <command id="Browser:Quit"    oncommand="BrowserQuit();"/>
+  <command id="View:FullScreen" oncommand="BrowserFullScreen();"/>
+</commandset>
+<keyset id="mainKeyset">
+  <key modifiers="accel" keycode="VK_HOME" command="Browser:Home"/>
+  <key keycode="VK_BACK" command="Browser:Back"/>
+  <key modifiers="alt"   keycode="VK_LEFT" command="Browser:Back"/>
+  <key modifiers="accel" key="[" command="Browser:Back"/>
+  <key modifiers="alt"   keycode="VK_RIGHT" command="Browser:Forward"/>
+  <key modifiers="accel" key="]" command="Browser:Forward"/>
+  <key keycode="VK_F5"   command="Browser:Reload"/>
+  <key modifiers="accel" key="R" command="Browser:Reload"/>
+  <key modifiers="accel" keycode="VK_F5" command="Browser:ReloadSkipCache"/>
+  <key modifiers="accel shift" key="R" command="Browser:ReloadSkipCache"/>
+  <key modifiers="accel" key="+" command="Browser:ZoomIn"/>
+  <key modifiers="accel" key="-" command="Browser:ZoomOut"/>
+  <key modifiers="accel" key="0" command="Browser:ZoomReset"/>
+  <key modifiers="accel" key="," command="Browser:about:pre"/>
+  <key modifiers="accel" key="." command="Browser:about:about"/>
+  <key modifiers="accel" key="/" command="Browser:about:config"/>
+  <key modifiers="accel" key="Q" command="Browser:Quit"/>
+  <key id="key_fullScreen" keycode="VK_F11" command="View:FullScreen"/>
+</keyset>
+
+<script type="application/javascript">
+  Components.utils.import("resource://gre/modules/Services.jsm");
+  Services.scriptloader.loadSubScript("chrome://browser/content/browser.js", this);
+</script>
+
+<!-- for invalid form error message -->
+<panel id="invalid-form-popup" type="arrow" orient="vertical" noautofocus="true" hidden="true" level="parent">
+  <description/>
+</panel>
+
+<stack class="browserStack" flex="10000">
+  <browser id="content" contextmenu="contentAreaContextMenu" datetimepicker="DateTimePickerPanel" message="true" messagemanagergroup="browsers" selectmenulist="ContentSelectDropdown" tooltip="aHTMLTooltip" type="content" remote="true" autocompletepopup="PopupAutoComplete" nodefaultsrc="true" primary="true" autoscrollpopup="autoscroller"/>
+  <browser id="aboutContent" contextmenu="contentAreaContextMenu" datetimepicker="DateTimePickerPanel" message="true" messagemanagergroup="browsers" selectmenulist="ContentSelectDropdown" tooltip="aHTMLTooltip" type="content" remote="false" autocompletepopup="PopupAutoComplete" nodefaultsrc="true" primary="true" autoscrollpopup="autoscroller"/>
+</stack>
+
+</html>
diff --git a/browser/amethyst/jar.mn b/browser/amethyst/jar.mn
new file mode 100644
--- /dev/null
+++ b/browser/amethyst/jar.mn
@@ -0,0 +1,5 @@
+browser.jar:
+%  content browser %content/browser/ contentaccessible=yes
+        content/browser/browser.css                   (content/browser.css)
+        content/browser/browser.js                    (content/browser.js)
+        content/browser/browser.xhtml                 (content/browser.xhtml)
diff --git a/browser/amethyst/moz.build b/browser/amethyst/moz.build
new file mode 100644
--- /dev/null
+++ b/browser/amethyst/moz.build
@@ -0,0 +1,1 @@
+JAR_MANIFESTS += ['jar.mn']
diff --git a/browser/base/jar.mn b/browser/base/jar.mn
--- a/browser/base/jar.mn
+++ b/browser/base/jar.mn
@@ -29,9 +29,6 @@ browser.jar:
         content/browser/aboutTabCrashed.css           (content/aboutTabCrashed.css)
         content/browser/aboutTabCrashed.js            (content/aboutTabCrashed.js)
         content/browser/aboutTabCrashed.xhtml         (content/aboutTabCrashed.xhtml)
-*       content/browser/browser.css                   (content/browser.css)
-        content/browser/browser.js                    (content/browser.js)
-*       content/browser/browser.xhtml                 (content/browser.xhtml)
         content/browser/browser-a11yUtils.js          (content/browser-a11yUtils.js)
         content/browser/browser-addons.js             (content/browser-addons.js)
         content/browser/browser-allTabsMenu.js        (content/browser-allTabsMenu.js)
diff --git a/browser/moz.build b/browser/moz.build
--- a/browser/moz.build
+++ b/browser/moz.build
@@ -12,6 +12,7 @@ with Files('docs/**'):
     SCHEDULES.exclusive = ['docs']

 DIRS += [
+    'amethyst',
     'actors',
     'base',
     'components',
diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -19,6 +19,15 @@
   #endif
 #endif
 
+// WebViewer pref
+pref("webviewer.homepage.enable", false);
+pref("webviewer.back.enable",     false);
+pref("webviewer.forward.enable",  false);
+pref("webviewer.reload.enable",   false);
+pref("webviewer.zoom.enable",     false);
+pref("webviewer.about.enable",    false);
+pref("webviewer.quit.enable",     false);
+
 pref("browser.hiddenWindowChromeURL", "chrome://browser/content/hiddenWindowMac.xhtml");
 
 // Enables some extra Extension System Logging (can reduce performance)
@@ -235,7 +244,7 @@ pref("browser.defaultbrowser.notificatio
 // 0 = blank, 1 = home (browser.startup.homepage), 2 = last visited page, 3 = resume previous browser session
 // The behavior of option 3 is detailed at: http://wiki.mozilla.org/Session_Restore
 pref("browser.startup.page",                1);
-pref("browser.startup.homepage",            "about:home");
+pref("browser.startup.homepage",    "https://r.gecko-embedded.org/amethyst");
 pref("browser.startup.homepage.abouthome_cache.enabled", false);
 
 // Whether we should skip the homepage when opening the first-run page
