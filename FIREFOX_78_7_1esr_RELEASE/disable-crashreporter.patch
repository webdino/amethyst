diff --git a/build/appini_header.py b/build/appini_header.py
--- a/build/appini_header.py
+++ b/build/appini_header.py
@@ -18,11 +18,6 @@ def main(output, file):
             flags.add('NS_XRE_ENABLE_PROFILE_MIGRATOR')
     except Exception:
         pass
-    try:
-        if config.getint('Crash Reporter', 'Enabled') == 1:
-            flags.add('NS_XRE_ENABLE_CRASH_REPORTER')
-    except Exception:
-        pass
     appdata = dict(("%s:%s" % (s, o), config.get(s, o))
                    for s in config.sections() for o in config.options(s))
     appdata['flags'] = ' | '.join(sorted(flags)) if flags else '0'
diff --git a/old-configure.in b/old-configure.in
--- a/old-configure.in
+++ b/old-configure.in
@@ -1891,6 +1891,7 @@ if test "$OS_ARCH" != "$HOST_OS_ARCH" -a
   MOZ_CRASHREPORTER=
 fi
 
+MOZ_CRASHREPORTER=
 if test -n "$MOZ_CRASHREPORTER"; then
    AC_DEFINE(MOZ_CRASHREPORTER)
 
diff --git a/toolkit/xre/CreateAppData.cpp b/toolkit/xre/CreateAppData.cpp
--- a/toolkit/xre/CreateAppData.cpp
+++ b/toolkit/xre/CreateAppData.cpp
@@ -70,8 +70,6 @@ nsresult XRE_ParseAppData(nsIFile* aINIF
   ReadString(parser, "AppUpdate", "URL", aAppData.updateURL);
   ReadFlag(parser, "XRE", "EnableProfileMigrator",
            NS_XRE_ENABLE_PROFILE_MIGRATOR, aAppData.flags);
-  ReadFlag(parser, "Crash Reporter", "Enabled", NS_XRE_ENABLE_CRASH_REPORTER,
-           aAppData.flags);
 
   return NS_OK;
 }
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -3177,10 +3177,6 @@ int XREMain::XRE_mainInit(bool* aExitFla
   rv = mDirProvider.Initialize(mAppData->directory, mAppData->xreDirectory);
   if (NS_FAILED(rv)) return 1;
 
-  if (EnvHasValue("MOZ_CRASHREPORTER")) {
-    mAppData->flags |= NS_XRE_ENABLE_CRASH_REPORTER;
-  }
-
   nsCOMPtr<nsIFile> xreBinDirectory;
   xreBinDirectory = mDirProvider.GetGREBinDir();
 
